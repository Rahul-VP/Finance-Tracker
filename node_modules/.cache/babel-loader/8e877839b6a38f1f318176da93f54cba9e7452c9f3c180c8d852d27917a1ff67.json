{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\sample\\\\Finance\\\\src\\\\context\\\\GlobalState.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\n\n// Initial state (could be loaded from localStorage or API in a real app)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTransactions = [];\nexport const GlobalContext = /*#__PURE__*/createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState(initialTransactions);\n\n  // Add a new transaction\n  function addTransaction(transaction) {\n    setTransactions([transaction, ...transactions]);\n  }\n\n  // Delete a transaction by id\n  function deleteTransaction(id) {\n    setTransactions(transactions.filter(t => t.id !== id));\n  }\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions,\n      addTransaction,\n      deleteTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalProvider, \"HzVMdFQcrqbaKI/RXQorEAcdloE=\");\n_c = GlobalProvider;\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","initialTransactions","GlobalContext","GlobalProvider","children","_s","transactions","setTransactions","addTransaction","transaction","deleteTransaction","id","filter","t","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/sample/Finance/src/context/GlobalState.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\n// Initial state (could be loaded from localStorage or API in a real app)\r\nconst initialTransactions = [];\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [transactions, setTransactions] = useState(initialTransactions);\r\n\r\n  // Add a new transaction\r\n  function addTransaction(transaction) {\r\n    setTransactions([transaction, ...transactions]);\r\n  }\r\n\r\n  // Delete a transaction by id\r\n  function deleteTransaction(id) {\r\n    setTransactions(transactions.filter(t => t.id !== id));\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ transactions, addTransaction, deleteTransaction }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,mBAAmB,GAAG,EAAE;AAE9B,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAE5C,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAACG,mBAAmB,CAAC;;EAErE;EACA,SAASO,cAAcA,CAACC,WAAW,EAAE;IACnCF,eAAe,CAAC,CAACE,WAAW,EAAE,GAAGH,YAAY,CAAC,CAAC;EACjD;;EAEA;EACA,SAASI,iBAAiBA,CAACC,EAAE,EAAE;IAC7BJ,eAAe,CAACD,YAAY,CAACM,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC;EACxD;EAEA,oBACEX,OAAA,CAACE,aAAa,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET,YAAY;MAAEE,cAAc;MAAEE;IAAkB,CAAE;IAAAN,QAAA,EAChFA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACd,EAAA,CAlBWF,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}